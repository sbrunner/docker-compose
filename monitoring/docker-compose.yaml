version: '3.6'
services:
  alertmanager:
    container_name: ${CONTAINER_PREFIX}alertmanager
    image: prom/alertmanager:latest
    ports:
      - ${ALERT_MANAGER_PORT}:9093/tcp
    volumes:
      - ${CONFIGURATION_FOLDER}/alertmanager/data:/alertmanager
      - ${CONFIGURATION_FOLDER}/alertmanager/config:/etc/alertmanager
    restart: unless-stopped
  container-exporter:
    container_name: ${CONTAINER_PREFIX}container-exporter
    image: prom/container-exporter:latest
    ports:
      - ${CONTAINER_EXPORTER_PORT}:9104/tcp
    volumes:
      - /sys/fs/cgroup:/cgroup
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  grafana:
    container_name: ${CONTAINER_PREFIX}grafana
    image: grafana/grafana:latest
    environment:
      - GF_DEFAULT_INSTANCE_NAME
      - GF_USERS_ALLOW_SIGN_UP
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_AUTH_GOOGLE_CLIENT_SECRET
      - GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS
      - GF_FEATURE_TOGGLES_ENABLE
    ports:
      - ${GRAFANA_PORT}:3000/tcp
    network_mode: host
    volumes:
      - ${CONFIGURATION_FOLDER}/grafana/datasources:/etc/grafana/provisioning/datasources
      - ${CONFIGURATION_FOLDER}/grafana/data:/var/lib/grafana
      - ${CONFIGURATION_FOLDER}/grafana/dashboards:/etc/grafana/provisioning/dashboards
    restart: unless-stopped
  loki:
    container_name: ${CONTAINER_PREFIX}loki
    image: grafana/loki:latest
    command:
      - -config.file=/etc/loki/config.yaml
    ports:
      - ${LOKI_PORT}:3100/tcp
    volumes:
      - ${CONFIGURATION_FOLDER}/loki/wal:/wal
      - ${CONFIGURATION_FOLDER}/loki/config:/etc/loki:ro
      - ${CONFIGURATION_FOLDER}/loki/data:/loki/chunks
    restart: unless-stopped
  node-exporter:
    container_name: ${CONTAINER_PREFIX}node-exporter
    image: prom/node-exporter:latest
    hostname: nas
    ports:
      - ${NODE_EXPORTER_PORT}:9100/tcp
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
  process-exporter:
    container_name: ${CONTAINER_PREFIX}process-exporter
    image: ncabatoff/process-exporter:latest
    command:
      - --procfs
      - /host/proc
      - -config.path
      - /config/config.yaml
    ports:
      - ${PROCESS_EXPORTER_PORT}:9256/tcp
    volumes:
      - ${CONFIGURATION_FOLDER}/process-exporter/config:/config
      - /proc:/host/proc
    restart: unless-stopped
  prometheus:
    container_name: ${CONTAINER_PREFIX}prometheus
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - ${PROMETHEUS_PORT}:9090/tcp
    volumes:
      - ${CONFIGURATION_FOLDER}/prometheus/config:/etc/prometheus
      - ${CONFIGURATION_FOLDER}/prometheus/data:/prometheus
    restart: unless-stopped
  promtail:
    container_name: ${CONTAINER_PREFIX}promtail
    image: grafana/promtail:latest
    command:
      - -config.file=/etc/promtail/config.yaml
    volumes:
      - ${CONFIGURATION_FOLDER}/promtail/config:/etc/promtail
      - /var/log:/var/log
      - /volume1/logs/synoscheduler:/volume1/logs/synoscheduler
    restart: unless-stopped
  snmp-exporter:
    container_name: ${CONTAINER_PREFIX}snmp-exporter
    image: prom/snmp-exporter:latest
    command:
      - --config.file=/etc/snmp_exporter/snmp.yml
    ports:
      - ${SNMP_EXPORTER_PORT1}:116/udp
      - ${SNMP_EXPORTER_PORT2}:9116/tcp
    volumes:
      - ${CONFIGURATION_FOLDER}/snmp-exporter/config:/etc/snmp_exporter
    restart: unless-stopped
