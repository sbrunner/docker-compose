
version: "3.6"
services:
  Ubuntu:
    command:
      - "/bin/bash"
    container_name: "Ubuntu"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "f6e339f6a0f8"
    image: "ubuntu:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.ref.name: "ubuntu"
      org.opencontainers.image.version: "22.04"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:11"
    network_mode: "bridge"
    restart: "always"
    stdin_open: true
    tty: true
  alertmanager:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    container_name: "alertmanager"
    entrypoint:
      - "/bin/alertmanager"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "alertmanager"
    image: "prom/alertmanager:latest"
    ipc: "private"
    labels:
      maintainer: "The Prometheus Authors <prometheus-developers@googlegroups.com>"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:14"
    network_mode: "bridge"
    ports:
      - "9093:9093/tcp"
    restart: "unless-stopped"
    stdin_open: true
    tty: true
    user: "nobody"
    volumes:
      - "/volume1/docker/alertmanager/data:/alertmanager"
      - "/volume1/docker/alertmanager/config:/etc/alertmanager"
    working_dir: "/alertmanager"
  container-exporter:
    container_name: "container-exporter"
    entrypoint:
      - "/bin/container-exporter"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "GOPATH=/go"
      - "APPPATH=/go/src/github.com/docker-infra/container-exporter"
    hostname: "nas"
    image: "prom/container-exporter"
    ipc: "private"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0b"
    network_mode: "bridge"
    ports:
      - "9104:9104/tcp"
    volumes:
      - "/sys/fs/cgroup:/cgroup"
      - "/var/run/docker.sock:/var/run/docker.sock"
  docker-autocompose:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "sleep"
      - "infinity"
    container_name: "docker-autocompose"
    environment:
      - "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=C.UTF-8"
      - "PYTHON_VERSION=3.11.0"
      - "PYTHON_PIP_VERSION=22.3"
      - "PYTHON_SETUPTOOLS_VERSION=65.5.0"
      - "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/6d265be7a6b5bc4e9c5c07646aee0bf0394be03d/public/get-pip.py"
    hostname: "80856f9e98a0"
    image: "ghcr.io/red5d/docker-autocompose:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.created: "2022-11-15T05:02:29Z"
      org.opencontainers.image.source: "https://github.com/Red5d/docker-autocompose"
      org.opencontainers.image.title: "Red5d/docker-autocompose"
      org.opencontainers.image.version: "latest"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:02"
    network_mode: "bridge"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    working_dir: "/usr/src/app"
  grafana:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "grafana"
    entrypoint:
      - "/run.sh"
    environment:
      - "PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "GF_PATHS_CONFIG=/etc/grafana/grafana.ini"
      - "GF_PATHS_DATA=/var/lib/grafana"
      - "GF_PATHS_HOME=/usr/share/grafana"
      - "GF_PATHS_LOGS=/var/log/grafana"
      - "GF_PATHS_PLUGINS=/var/lib/grafana/plugins"
      - "GF_PATHS_PROVISIONING=/etc/grafana/provisioning"
      - "GF_USERS_ALLOW_SIGN_UP=false"
      - "GF_SECURITY_ADMIN_PASSWORD=sbr1663"
      - "GF_SECURITY_ADMIN_USER=admin"
    hostname: "grafana"
    image: "grafana/grafana:latest"
    ipc: "private"
    logging:
      driver: "db"
      options: {}
    network_mode: "host"
    ports:
      - "3000:3000/tcp"
    restart: "always"
    stdin_open: true
    tty: true
    user: "472"
    volumes:
      - "/volume1/docker/grafana/datasources:/etc/grafana/provisioning/datasources"
      - "/volume1/docker/grafana/data:/var/lib/grafana"
      - "/volume1/docker/grafana/dashboards:/etc/grafana/provisioning/dashboards"
    working_dir: "/usr/share/grafana"
  graphite:
    container_name: "graphite"
    entrypoint:
      - "/entrypoint"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "STATSD_INTERFACE=udp"
    hostname: "graphite"
    image: "sitespeedio/graphite:latest"
    ipc: "private"
    labels:
      maintainer: "Denys Zhdanov <denis.zhdanov@gmail.com>"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:09"
    network_mode: "bridge"
    ports:
      - "2003:2003/tcp"
      - "2002:80/tcp"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/docker/graphite/data:/opt/graphite/storage"
      - "/volume1/docker/graphite/custom_functions:/opt/graphite/webapp/graphite/functions/custom"
      - "afbdb801e4be3ad32e195ae65387069cf5ffcbec83724329cddac10225b60791:/opt/statsd/config"
      - "bfd51d939354b58db86cc6e7837e6f35315827930d96bec4d183c7d6e1ff20cd:/var/lib/redis"
      - "5f9be823f7b0e72190a857dda8bce9be632663dfd2399c809513442dd0e13f3f:/var/log"
      - "12f0fcf2adf8fa9cd2a8d4151dcfb17c7dd62dd0c2eab9fae62e6ab5eb71bc07:/etc/logrotate.d"
      - "d46564edbeb0861d4cb1bacfb015cb0514419cc39813a24c7894709dab9b4975:/etc/nginx"
      - "/volume1/docker/graphite/config:/opt/graphite/conf"
  loki:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "-config.file=/etc/loki/config.yaml"
    container_name: "loki"
    entrypoint:
      - "/usr/bin/loki"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "loki"
    image: "grafana/loki:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.created: "2021-04-06T00:51:32Z"
      org.opencontainers.image.revision: "babea82ef558c4b4dc685fd4ca677de1f0a7ee8f"
      org.opencontainers.image.source: "https://github.com/grafana/loki.git"
      org.opencontainers.image.url: "https://github.com/grafana/loki"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0a"
    network_mode: "bridge"
    ports:
      - "3100:3100/tcp"
    stdin_open: true
    tty: true
    user: "loki"
    volumes:
      - "/volume1/docker/loki/wal:/wal"
      - "/volume1/docker/loki/config:/etc/loki:ro"
      - "/volume1/docker/loki/data:/loki/chunks"
  netatmo-exporter:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "netatmo-exporter"
    entrypoint:
      - "/bin/netatmo-exporter"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "NETATMO_EXPORTER_ADDR=netatmo-exporter:9210"
      - "NETATMO_CLIENT_PASSWORD"
      - "NETATMO_CLIENT_USERNAME"
      - "NETATMO_CLIENT_SECRET"
      - "NETATMO_CLIENT_ID"
    hostname: "netatmo-exporter"
    image: "xperimental/netatmo-exporter:latest"
    ipc: "private"
    labels:
      maintainer: "Robert Jacob <xperimental@solidproject.de>"
      org.opencontainers.image.created: "2023-01-08T16:15:52.054Z"
      org.opencontainers.image.description: "Prometheus exporter for Netatmo sensor\
        \ data."
      org.opencontainers.image.licenses: "MIT"
      org.opencontainers.image.revision: "3cd2ec2416954594ee011dfd73e6465530e01676"
      org.opencontainers.image.source: "https://github.com/xperimental/netatmo-exporter"
      org.opencontainers.image.title: "netatmo-exporter"
      org.opencontainers.image.url: "https://github.com/xperimental/netatmo-exporter"
      org.opencontainers.image.version: "1.5.1"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:06"
    network_mode: "bridge"
    ports:
      - "9210:9210/tcp"
    restart: "always"
    stdin_open: true
    tty: true
    user: "nobody"
  netatmo2graphite:
    command:
      - "netatmo2graphite"
    container_name: "netatmo2graphite"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LOGLEVEL=DEBUG"
      - "GRAPHITE_HOST=192.168.0.20"
      - "NETATMO_CLIENT_PASSWORD"
      - "NETATMO_CLIENT_USERNAME"
      - "NETATMO_CLIENT_SECRET"
      - "NETATMO_CLIENT_ID"
      - "DAEMON_DELAY_SECONDS=300"
      - "DAEMON_DEFAULT_TIMESTAMP=1635368400"
      - "DAEMON_PROCESS_ADD_ON_IGNORE_SECOUNDS=86400"
      - "DAEMON_PROCESS_MAX_MISSING_SECOUNDS=1000000"
    hostname: "netatmo2graphite"
    image: "sbrunner/netatmo2graphite:latest"
    ipc: "private"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0e"
    network_mode: "bridge"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/docker/netatmo2graphite/config:/etc/netatmo2graphite"
    working_dir: "/app"
  node-exporter:
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1)($$|/)"
    container_name: "node-exporter"
    entrypoint:
      - "/bin/node_exporter"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "nas"
    image: "prom/node-exporter:latest"
    ipc: "private"
    labels:
      maintainer: "The Prometheus Authors <prometheus-developers@googlegroups.com>"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:08"
    network_mode: "bridge"
    ports:
      - "9100:9100/tcp"
    restart: "unless-stopped"
    security_opt:
      - "label=disable"
    user: "nobody"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
  paperless:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "/usr/local/bin/paperless_cmd.sh"
    container_name: "paperless"
    entrypoint:
      - "/sbin/docker-entrypoint.sh"
    environment:
      - "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=C.UTF-8"
      - "PYTHON_VERSION=3.9.6"
      - "PYTHON_PIP_VERSION=21.2.4"
      - "PYTHON_SETUPTOOLS_VERSION=58.1.0"
      - "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/c20b0cfd643cd4a19246ccf204e2997af70f6b21/public/get-pip.py"
      - "PAPERLESS_WORKER_TIMEOUT=3600"
      - "PAPERLESS_URL=http://100.88.77.85:8001"
      - "PAPERLESS_CSRF_TRUSTED_ORIGINS=http://100.88.77.85:8001"
      - "PAPERLESS_CORS_ALLOWED_HOSTS =http://100.88.77.85:8001"
      - "PAPERLESS_ALLOWED_HOSTS=100.88.77.85"
      - "PAPERLESS_DEBUG_=True"
      - "PAPERLESS_IGNORE_DATES=17-03-1977,03-11-1977,24-12-2015,04-03-2017"
      - "PAPERLESS_AUTO_LOGIN_USERNAME=admin"
      - "PAPERLESS_FILENAME_FORMAT={correspondent}/{document_type}/{created_year}/{title}-{created}"
      - "PAPERLESS_THREADS_PER_WORKER_=3"
      - "PAPERLESS_TASK_WORKERS_=1"
      - "PAPERLESS_FORGIVING_OCR=true"
      - "PAPERLESS_INLINE_DOC=true"
      - "PAPERLESS_LIST_PER_PAGE=100"
      - "PAPERLESS_DISABLE_LOGIN=true"
      - "PAPERLESS_OCR_THREADS=1"
      - "PAPERLESS_OCR_LANGUAGES=fra+eng"
      - "USERMAP_GID=104555"
      - "USERMAP_UID=114670"
      - "PAPERLESS_CONVERT_MEMORY_LIMIT=32000000"
      - "PAPERLESS_DBHOST=postgres"
      - "PAPERLESS_DBUSER=paperless"
      - "PAPERLESS_DBPASS=1234"
      - "PAPERLESS_REDIS=redis://redis:6379"
      - "OMP_THREAD_LIMIT=1"
      - "PAPERLESS_CONSUMPTION_DIR=/consume"
      - "PAPERLESS_EXPORT_DIR=/export"
      - "PAPERLESS_TIME_ZONE=Europe/Zurich"
      - "TZ=Europe/Zurich"
    hostname: "paperless"
    image: "paperlessngx/paperless-ngx:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.authors: "paperless-ngx team <hello@paperless-ngx.com>"
      org.opencontainers.image.created: "2023-01-29T16:57:53.460Z"
      org.opencontainers.image.description: "A community-supported supercharged version\
        \ of paperless: scan, index and archive all your physical documents"
      org.opencontainers.image.documentation: "https://docs.paperless-ngx.com/"
      org.opencontainers.image.licenses: "GPL-3.0"
      org.opencontainers.image.revision: "0a47fba9ae1c624d05d6352cd045db41dfec6735"
      org.opencontainers.image.source: "https://github.com/paperless-ngx/paperless-ngx"
      org.opencontainers.image.title: "paperless-ngx"
      org.opencontainers.image.url: "https://github.com/paperless-ngx/paperless-ngx"
      org.opencontainers.image.version: "1.12.2"
    links:
      - "/postgres:/paperless/postgres"
      - "/redis:/paperless/redis"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:07"
    network_mode: "bridge"
    ports:
      - "8001:8000/tcp"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/paperless/media:/usr/src/paperless/media2"
      - "/volume1/paperless/consume:/consume"
      - "2c3b83a9c204ecf17eb8ff868ed61075592204ac04d62f74b54c65bac5df319c:/usr/src/paperless/consume"
      - "c1caf82a3bf33289f35ebd41351407a3b5459f0b917ba1f8adebc9ce785208fc:/usr/src/paperless/data"
      - "aa688fac316c6723abcf3dd3e529941b5142f55236c818f0c8b895d80c7a5505:/usr/src/paperless/export"
      - "/volume1/docker/paperless/dumpdata:/dumpdata"
      - "/volume1/docker/paperless/export:/export"
      - "/volume1/docker/paperless/media:/usr/src/paperless/media"
    working_dir: "/usr/src/paperless/src"
  portainer:
    container_name: "portainer"
    entrypoint:
      - "/portainer"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "4374ffbe7059"
    image: "portainer/portainer"
    ipc: "private"
    labels:
      com.docker.desktop.extension.api.version: ">= 0.2.2"
      com.docker.desktop.extension.icon: "https://portainer-io-assets.sfo2.cdn.digitaloceanspaces.com/logos/portainer.png"
      com.docker.extension.additional-urls: "[{\"title\":\"Website\",\"url\":\"https://www.portainer.io?utm_campaign=DockerCon&utm_source=DockerDesktop\"\
        },{\"title\":\"Documentation\",\"url\":\"https://docs.portainer.io\"},{\"\
        title\":\"Support\",\"url\":\"https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA\"\
        }]"
      com.docker.extension.detailed-description: "<p data-renderer-start-pos=\"226\"\
        >Portainer&rsquo;s Docker Desktop extension gives you access to all of Portainer&rsquo;s\
        \ rich management functionality within your docker desktop experience.</p><h2\
        \ data-renderer-start-pos=\"374\">With Portainer you can:</h2><ul><li>See\
        \ all your running containers</li><li>Easily view all of your container logs</li><li>Console\
        \ into containers</li><li>Easily deploy your code into containers using a\
        \ simple form</li><li>Turn your YAML into custom templates for easy reuse</li></ul><h2\
        \ data-renderer-start-pos=\"660\">About Portainer&nbsp;</h2><p data-renderer-start-pos=\"\
        680\">Portainer is the worlds&rsquo; most popular universal container management\
        \ platform with more than 650,000 active monthly users. Portainer can be used\
        \ to manage Docker Standalone, Kubernetes, Docker Swarm and Nomad environments\
        \ through a single common interface. It includes a simple GitOps automation\
        \ engine and a Kube API.&nbsp;</p><p data-renderer-start-pos=\"1006\">Portainer\
        \ Business Edition is our fully supported commercial grade product for business-wide\
        \ use. It includes all the functionality that businesses need to manage containers\
        \ at scale. Visit <a class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/\"\
        \ title=\"http://Portainer.io\" data-renderer-mark=\"true\">Portainer.io</a>\
        \ to learn more about Portainer Business and <a class=\"sc-jKJlTe dPfAtb\"\
        \ href=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ title=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ data-renderer-mark=\"true\">get 5 free nodes.</a></p>"
      com.docker.extension.publisher-url: "https://www.portainer.io"
      com.docker.extension.screenshots: "[{\"alt\": \"screenshot one\", \"url\": \"\
        https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-1.png\"\
        },{\"alt\": \"screenshot two\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-2.png\"\
        },{\"alt\": \"screenshot three\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-3.png\"\
        },{\"alt\": \"screenshot four\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-4.png\"\
        },{\"alt\": \"screenshot five\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-5.png\"\
        },{\"alt\": \"screenshot six\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-6.png\"\
        },{\"alt\": \"screenshot seven\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-7.png\"\
        },{\"alt\": \"screenshot eight\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-8.png\"\
        },{\"alt\": \"screenshot nine\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-9.png\"\
        }]"
      org.opencontainers.image.description: "Docker container management made simple,\
        \ with the world’s most popular GUI-based container management platform."
      org.opencontainers.image.title: "Portainer"
      org.opencontainers.image.vendor: "Portainer.io"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:04"
    network_mode: "bridge"
    ports:
      - "8000:8000/tcp"
      - "9000:9000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/volume1/docker/portainer/data:/data"
    working_dir: "/"
  postgres:
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "work_mem=16MB"
    container_name: "postgres"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/12/bin"
      - "GOSU_VERSION=1.14"
      - "LANG=en_US.utf8"
      - "PG_MAJOR=12"
      - "PG_VERSION=12.3-1.pgdg100+1"
      - "PGDATA=/var/lib/postgresql/data"
      - "POSTGRES_HOST_AUTH_METHOD=md5"
      - "POSTGRES_DB=paperless"
      - "POSTGRES_USER=paperless"
      - "POSTGRES_PASSWORD=1234"
    hostname: "postgres"
    image: "postgres:12"
    ipc: "shareable"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:03"
    network_mode: "bridge"
    ports:
      - ":5432/tcp"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/Backup/Paperless/pgdata:/var/lib/postgresql/data"
  process-exporter:
    command:
      - "--procfs"
      - "/host/proc"
      - "-config.path"
      - "/config/config.yaml"
    container_name: "process-exporter"
    entrypoint:
      - "/bin/process-exporter"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "edd331b7fcea"
    image: "ncabatoff/process-exporter:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.created: "2021-11-17T13:18:41.943Z"
      org.opencontainers.image.description: "Prometheus exporter that mines /proc\
        \ to report on selected processes"
      org.opencontainers.image.licenses: "MIT"
      org.opencontainers.image.revision: "935906b20e56b70afc22443137fa0337f7fa5d05"
      org.opencontainers.image.source: "https://github.com/ncabatoff/process-exporter"
      org.opencontainers.image.title: "process-exporter"
      org.opencontainers.image.url: "https://github.com/ncabatoff/process-exporter"
      org.opencontainers.image.version: "0.7.10"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0f"
    network_mode: "bridge"
    ports:
      - "9256:9256/tcp"
    security_opt:
      - "label=disable"
    volumes:
      - "/volume1/docker/process-exporter/config:/config"
      - "/proc:/host/proc"
    working_dir: "/"
  prometheus:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    container_name: "prometheus"
    entrypoint:
      - "/bin/prometheus"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    expose:
      - "9090/tcp"
    hostname: "prometheus"
    image: "prom/prometheus:latest"
    ipc: "private"
    labels:
      maintainer: "The Prometheus Authors <prometheus-developers@googlegroups.com>"
    logging:
      driver: "db"
      options: {}
    network_mode: "host"
    stdin_open: true
    tty: true
    user: "nobody"
    volumes:
      - "/volume1/docker/prometheus/config:/etc/prometheus"
      - "/volume1/docker/prometheus/data:/prometheus"
    working_dir: "/prometheus"
  promtail:
    command:
      - "-config.file=/etc/promtail/config.yaml"
    container_name: "promtail"
    entrypoint:
      - "/usr/bin/promtail"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "fbc7ede51ede"
    image: "grafana/promtail"
    ipc: "private"
    labels:
      org.opencontainers.image.created: "2023-01-26T14:10:33Z"
      org.opencontainers.image.revision: "c35554d0956dd1a313277c5d56e49de7c6936161"
      org.opencontainers.image.source: "https://github.com/grafana/loki.git"
      org.opencontainers.image.url: "https://github.com/grafana/loki"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:13"
    network_mode: "bridge"
    volumes:
      - "/volume1/docker/promtail/config:/etc/promtail"
      - "/var/log:/var/log"
      - "/volume1/logs/synoscheduler:/volume1/logs/synoscheduler"
  redis:
    command:
      - "redis-server"
    container_name: "redis"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "GOSU_VERSION=1.14"
      - "REDIS_VERSION=6.2.10"
      - "REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-6.2.10.tar.gz"
    hostname: "redis"
    image: "redis:6"
    ipc: "shareable"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:05"
    network_mode: "bridge"
    ports:
      - ":6379/tcp"
    stdin_open: true
    tty: true
    volumes:
      - "7202ac532536e9ee6d832360423964d64fe306b26d8d93641a115ea470a6dc1d:/data"
    working_dir: "/data"
  sbrunner-scan-to-paperless:
    command:
      - "scan-process"
    container_name: "sbrunner-scan-to-paperless"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "VERSION=1.23.0+801"
    hostname: "sbrunner-scan-to-paperless"
    image: "sbrunner/scan-to-paperless:test"
    ipc: "private"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0d"
    network_mode: "bridge"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/paperless/scan-codes:/scan-codes"
      - "/volume1/paperless/scan:/source"
      - "/volume1/paperless/consume:/destination"
    working_dir: "/opt"
  sbrunner-scan-to-paperless-master:
    command:
      - "scan-process"
    container_name: "sbrunner-scan-to-paperless-master"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=C.UTF-8"
      - "VERSION=1.24.0+1110"
    hostname: "sbrunner-scan-to-paperless"
    image: "sbrunner/scan-to-paperless:master"
    ipc: "shareable"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:10"
    network_mode: "bridge"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/paperless/scan-master:/source"
      - "/volume1/paperless/consume:/destination"
      - "c18bc9df60c7afb09ed1542fe3eabfa9b0c04288156ac087b42f87ee26b410e5:/scan-codes"
    working_dir: "/opt"
  sbrunner-scan-to-paperless-test:
    command:
      - "scan-process"
    container_name: "sbrunner-scan-to-paperless-test"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "VERSION=1.23.0+801"
      - "SCAN_CODES_MARGIN_LEFT_=10"
      - "PROGRESS=TRUE"
      - "EXPERIMENTAL=TRUE"
    hostname: "sbrunner-scan-to-paperless-test"
    image: "sbrunner/scan-to-paperless:test"
    ipc: "private"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:0c"
    network_mode: "bridge"
    restart: "always"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/paperless/test/scan:/source"
      - "/volume1/paperless/test/consume:/destination"
      - "/volume1/paperless/test/scan-codes:/scan-codes"
    working_dir: "/opt"
  snmp-exporter:
    command:
      - "--config.file=/etc/snmp_exporter/snmp.yml"
    container_name: "snmp-exporter"
    entrypoint:
      - "/bin/snmp_exporter"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "snmp-exporter"
    image: "prom/snmp-exporter:latest"
    ipc: "private"
    labels:
      maintainer: "The Prometheus Authors <prometheus-developers@googlegroups.com>"
    logging:
      driver: "db"
      options: {}
    mac_address: "02:42:ac:11:00:12"
    network_mode: "bridge"
    ports:
      - "116:116/udp"
      - "9116:9116/tcp"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/docker/snmp-exporter/config:/etc/snmp_exporter"
  ubuntu:
    command:
      - "tail"
      - "-f"
      - "/dev/null"
    container_name: "ubuntu"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "ubuntu"
    image: "ubuntu:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.ref.name: "ubuntu"
      org.opencontainers.image.version: "22.04"
    logging:
      driver: "db"
      options: {}
    network_mode: "bridge"
    privileged: true
    security_opt:
      - "label=disable"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/data:/ds/data"
      - "/volume1/homes:/ds/homes"
      - "/volume1/docker/ubuntu/root:/root"
      - "/volume1/logs:/logs"
      - "/volume1/paperless:/ds/paperless"
  ubuntu-host:
    command:
      - "/bin/bash"
    container_name: "ubuntu-host"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "ubuntu-host"
    image: "ubuntu:latest"
    ipc: "private"
    labels:
      org.opencontainers.image.ref.name: "ubuntu"
      org.opencontainers.image.version: "22.04"
    logging:
      driver: "db"
      options: {}
    network_mode: "host"
    stdin_open: true
    tty: true
    volumes:
      - "/volume1/paperless:/ds/paperless"
      - "/volume1/data:/ds/data"
      - "/volume1/homes:/ds/homes"
      - "/volume1/docker/ubuntu/root:/root"
      - "/volume1/logs:/logs"
  watchtower:
    command:
      - "--run-once"
    container_name: "watchtower"
    entrypoint:
      - "/watchtower"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "TZ=Europe/Zurich"
      - "WATCHTOWER_CLEANUP=true"
      - "WATCHTOWER_INCLUDE_STOPPED=true"
    expose:
      - "8080/tcp"
    hostname: "5e0939b7fe2d"
    image: "containrrr/watchtower"
    ipc: "private"
    labels:
      com.centurylinklabs.watchtower: "true"
    logging:
      driver: "db"
      options: {}
    network_mode: "bridge"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    working_dir: "/"
volumes:
  12f0fcf2adf8fa9cd2a8d4151dcfb17c7dd62dd0c2eab9fae62e6ab5eb71bc07:
    external: true
  2c3b83a9c204ecf17eb8ff868ed61075592204ac04d62f74b54c65bac5df319c:
    external: true
  5f9be823f7b0e72190a857dda8bce9be632663dfd2399c809513442dd0e13f3f:
    external: true
  7202ac532536e9ee6d832360423964d64fe306b26d8d93641a115ea470a6dc1d:
    external: true
  aa688fac316c6723abcf3dd3e529941b5142f55236c818f0c8b895d80c7a5505:
    external: true
  afbdb801e4be3ad32e195ae65387069cf5ffcbec83724329cddac10225b60791:
    external: true
  bfd51d939354b58db86cc6e7837e6f35315827930d96bec4d183c7d6e1ff20cd:
    external: true
  c18bc9df60c7afb09ed1542fe3eabfa9b0c04288156ac087b42f87ee26b410e5:
    external: true
  c1caf82a3bf33289f35ebd41351407a3b5459f0b917ba1f8adebc9ce785208fc:
    external: true
  d46564edbeb0861d4cb1bacfb015cb0514419cc39813a24c7894709dab9b4975:
    external: true
